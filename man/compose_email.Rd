% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compose_email.R
\name{compose_email}
\alias{compose_email}
\title{Create the email message body}
\usage{
compose_email(body = NULL, footer = NULL, .preheader_text = NULL,
  .title = NULL, .envir = parent.frame(), ...)
}
\arguments{
\item{body}{The main body of text for the email message. Markdown can be used
here (along with string interpolation via curly braces and named arguments)
to construct the main text.}

\item{footer}{The footer text for the email message. As with the \code{body},
Markdown and string interpolation can be used here.}

\item{.preheader_text}{The text that appears before the subject in some email
clients. This must be plaintext.}

\item{.title}{The title of the email message. This is not the subject but the
HTML title text which may appear in limited circumstances.}

\item{.envir}{An opportunity to specify the environment. By default, this is
the \code{parent.frame()}.}

\item{...}{Expression strings for string interpolation for the \code{body},
\code{footer}, and \code{preheader_text} string data.}
}
\value{
An \code{email_message} object.
}
\description{
The \code{compose_email()} function allows us to easily create an email message
body. We can use \code{glue}'s string interpolation semantics to incorporate
external objects or evaluate R code within the message body, the footer, and
the preheader text (using curly braces to enclose such R expressions). Local
variables can be specified in the function call (using named arguments with
\code{...}) and any variables not found in \code{...} will be searched for in the
global environment.
}
\examples{
# Create a simple email message using
# Markdown formatting
email <-
  compose_email(
  body = "
  Hello!

  ## This a section heading

  We can use Markdown formatting \\\\
  to **embolden** text or to add \\\\
  *emphasis*. This is exciting, \\\\
  right?

  Cheers")

# The email message can always be
# previewed by calling the object
email

# We can use string interpolation to
# add in R code or strings assigned
# to variables; variables can be
# obtained from the global workspace
# or from temporary variables in the
# function call
sender_name <- "Shelly"

email <-
  compose_email(
  body = "
  Hello!

  I just wanted to let you \\\\
  know that the {thing} that \\\\
  asked me for is ready to \\\\
  pick up. So, come over and \\\\
  do that.

  Cheers,

  {sender_name}",
  thing = "report")
}
